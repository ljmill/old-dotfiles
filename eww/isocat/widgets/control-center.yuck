;; Remove "(screenpad-slider)" from line 329 unless you're
;; using an ASUS Zenbook Duo

;; ============================================================
;;                                                      Widgets
;; ============================================================

(defwidget cc-top-left-widgets []
	(box	:class "cc-connectivity-box"
				:orientation "h"
				:space-evenly false
				:halign "fill"
		(box	:class "cc-connectivity-glyph-rows"
				:orientation "v"
				:width 70
			(overlay
				(label	:class "cc-wifi-circle-glyph"
						:halign "center"
						:text "󰄯")
				(button	:class "cc-wifi-glyph"
						:halign "center"
						:onclick "scripts/popup wifi"
						wifi-icon))
			(overlay
				(label	:class "cc-bluetooth-circle-glyph"
						:halign "center"
						:text "󰄯")
				(button :class "cc-bluetooth-glyph"
						:halign "center"
						:onclick "scripts/popup bluetooth"
						bluetooth-icon))
			(overlay
				(label	:class "cc-airplane-circle-glyph"
						:halign "center"
						:text "󰄯")
				(button :class "cc-airplane-glyph"
						:halign "center"
						:onclick "scripts/airplane"
						airplane-icon))
		)
		(box	:class "cc-connectivity-rows"
				:orientation "v"
				:width 100
				:padding 5
			(box	:class "cc-wifi-box"
					:orientation "v"
					:valign "center"
				(label	:class "cc-title-label"
						:halign "start"
						:text "WiFi")
				(label :class "cc-sub-label"
						:halign "start"
						:text "${wifi-name}"))
			(box	:class "cc-bt-box"
					:orientation "v"
					:valign "center"
				(label	:class "cc-title-label"
						:halign "start"
						:text "Bluetooth")
				(label	:class "cc-sub-label"
						:halign "start"
						:text "${bluetooth-status} (${bluetooth-battery})"))
			(box	:class "cc-airplane-box"
					:orientation "v"
					:valign "center"
				(label	:class "cc-title-label"
						:halign "start"
						:text "Airplane")
				(label	:class "cc-sub-label"
						:halign "start"
						:text "${airplane-status}"))
		)
	)
)

(defwidget cc-top-right-widgets []
	(box	:class "cc-row-box"
			:orientation "v"
			:space-evenly true
			:spacing 15
		(box	:class "cc-dnd-box"
				:orientation "h"
				:space-evenly false
			(overlay	:halign "start"
						:valign "center"
						:width 70
				(label	:class "cc-dnd-circle-glyph"
						:halign "center"
						:style "color: ${dnd-color};"
						:text "󰄯")
				(button	:class "cc-dnd-glyph"
						:halign "center"
						:onclick "scripts/dnd"
						""))
			(box	:class "cc-dnd-box"
					:orientation "v"
					:valign "center"
					:halign "start"
				(label	:class "cc-title-label"
						:halign "start"
						:text "Do Not Disturb")
				(label :class "cc-sub-label"
						:halign "start"
						:text "${dnd-status}"))
		)
		(box	:class "cc-row-box"
				:orientation "h"
				:halign "fill"
				:spacing 15
			(overlay
				(box	:class "cc-keybright-box"
						:orientation "v"
						:space-evenly false
					(image	:class "cc-keybright-image"
							:path "${keybright-image}"
							:halign "center"
							:stacking "fg")
					(label	:class "cc-keybright-label"
							:halign "center"
							:text "Keyboard")
					(label	:class "cc-keybright-label"
							:halign "center"
							:text "Brightness"))
				(button	:onclick "scripts/keyboard-brightness"))
			(overlay :class "${weather-color}"
				(box	:class "cc-weather-box"
						:orientation "v"
						:space-evenly false
					(label	:class "cc-weather-icon"
							:halign "center"
							:stacking "fg"
							:text "${weather-icon}")
					(label	:class "cc-weather-label"
							:halign "center"
							:text "${weather-temp}°")))
		)
	)
)

(defwidget volume-slider []
	(box	:class "cc-slider-box"
			:orientation "v"
		(label	:class "cc-slider-title"
				:halign "start"
				:text "Volume")
		(box	:class "cc-saber-box"
				:orientation "h"
				:space-evenly false
			(overlay
				(scale	:class "cc-volbar"
						:valign "start"
						:value current-volume
						:orientation "h"
						:flipped false
						:tooltip "Volume: ${current-volume}%"
						:width 430
						:max 101
						:min 0
						:onchange "amixer -D pulse sset Master {}%" )
				(image	:path "images/lightsaber1.png"
						:halign "start"
						:stacking "fg")
				(label	:class "cc-slider-label"
						:halign "start"
						:text "")
			)
		)
	)
)

(defwidget brightness-slider []
	(box	:class "cc-slider-box"
			:orientation "v"
		(label	:class "cc-slider-title"
				:halign "start"
				:text "Brightness")
		(box	:class "cc-saber-box"
				:orientation "h"
				:space-evenly false
			(overlay
				(scale	:class "cc-bribar"
						:valign "start"
						:value current-brightness
						:orientation "h"
						:flipped false
						:tooltip "Brightness: ${current-brightness}%"
						:width 430
						:max 101
						:min 5
						:onchange "brightnessctl set {}%" )
				(image :path "images/lightsaber2.png"
						:halign "start"
						:stacking "fg")
				(label	:class "cc-slider-label"
						:halign "start"
						:text "")
			)
		)
	)
)

(defwidget screenpad-slider []
	(box	:class "cc-slider-box"
			:orientation "v"
		(label	:class "cc-slider-title"
				:halign "start"
				:text "Screenpad")
		(box	:class "cc-saber-box"
				:orientation "h"
				:space-evenly false
			(overlay
				(scale	:class "cc-spbribar"
						:valign "start"
						:value current-screenpad
						:orientation "h"
						:flipped false
						:tooltip "Brightness: ${round(current-screenpad*100/255,0)}%"
						:width 430
						:max 255
						:min 0
						:onchange "scripts/screenpad-change {}")
				(image	:path "images/lightsaber3.png"
						:halign "start"
						:stacking "fg")
			(label	:class "cc-slider-label"
					:halign "start"
					:text "")
			)
		)
	)
)

(defwidget battery-monitor []
	(box	:class "cc-bat-box"
	:orientation "h"
	:space-evenly true
		(circular-progress	:class "cc-bat"
							:value battery-capacity
							:thickness 13
			(label	:class "cc-bat-icon"
					:limit-width 2
					:show_truncated false
					:wrap false
					:text "")))
)

(defwidget cpu-monitor []
	(box	:class "cc-cpu-box" 
	:orientation "h" 
	:space-evenly true 
		(circular-progress	:class "cc-cpu"
							:value {EWW_CPU.avg}
							:thickness 13
			(label	:class "cc-cpu-icon"
					:limit-width 2
					:show_truncated false
					:wrap false
					:text "󰘚")))
)

(defwidget memory-monitor []
	(box	:class "cc-mem-box" 
	:orientation "h" 
	:space-evenly true 
		(circular-progress	:class "cc-mem"
							:value {EWW_RAM.used_mem_perc}
							:thickness 13
			(label	:class "cc-mem-icon"
					:limit-width 2
					:show_truncated false
					:wrap false
					:angle 0.0
					:text "󰍛"))
)
)

(defvar  airplane-icon "")
(defvar  airplane-status "")
(defpoll battery-capacity :interval "5m" "scripts/battery --percent")
(defpoll bluetooth-icon :interval "1s" "scripts/bluetooth --icon")
(defpoll bluetooth-status :interval "1s" "scripts/bluetooth --status")
(defpoll bluetooth-battery :interval "5m" "scripts/bluetooth --battery")
(defpoll current-brightness :interval "1s" "scripts/brightness-slider --value")
(defpoll current-screenpad :interval "1s" "scripts/screenpad-slider --value")
(defpoll current-volume :interval "1s" "amixer -D pulse sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%'")
(defvar  dnd-status "")
(defvar  dnd-color "")
(defvar  keybright-image "")
(defpoll weather-temp :interval "5m" "scripts/weather")
(defvar	 weather-color "")
(defvar  weather-icon "")
(defpoll wifi-icon :interval "1s" "scripts/wifi icon")
(defpoll wifi-name :interval "1s" "scripts/wifi name")

;; Area designated for mouse hover to reveal control center
;; Also, hidden initializer script to initialize values on defvars 
;; so they are accurate on startup (defvars can't be initialized 
;; from a script so the following script calls the eww update command 
;; to do it)
(defwidget hoverarea []
	(eventbox :onhover "scripts/control-center"
	(box :height 5 :width 504
		(label :text "${initializer}"))
))
(defpoll initializer :interval "24h" "scripts/initializer")

;; ============================================================
;;                                         Widget Consolidation
;; ============================================================

;; Top Row Widgets
(defwidget cc-top []
	(box	:orientation "h"
			:space-evenly true
			:height 200
			:spacing 15
(cc-top-left-widgets)
(cc-top-right-widgets)))

;; Middle Row Widgets
(defwidget cc-middle []
	(box	:class "cc-row-two-box"
			:orientation "v"
			:space-evenly false
			:width 470	
			:spacing 10
(volume-slider)
(brightness-slider)
(screenpad-slider)))

;; Bottom Row Widgets
(defwidget cc-bottom []
	(box	:class "cc-charts"
			:orientation "h" 
			:space-evenly true 
			:spacing 15
(battery-monitor)
(cpu-monitor)
(memory-monitor)))

;; ============================================================
;;                                      Control Center Assembly
;; ============================================================

(defwidget control-center []
	(eventbox	:onhoverlost "scripts/control-center"
		(box	:class "cc-main-box"
				:orientation "v" 
				:space-evenly false  
				:halign "center"
				:width 500
			(box	:class "cc-padded-box"
					:orientation "v"
					:space-evenly false
					:spacing 15
(cc-top)
(cc-middle)
(cc-bottom)))))
;; ============================================================
;;                                                      Windows
;; ============================================================

;; Control Center
(defwindow control-center
	:geometry (geometry :x "708" 
						:y "5" 
)
		:monitor 0
		:wm-ignore false
		:hexpand false
		:vexpand false
(control-center))
 
;; Hover Area
(defwindow hoverarea :geometry (geometry :x "708" :y "0")
	:monitor 0
	:wm-ignore false
	:hexpand false
	:vexpand false
(hoverarea))