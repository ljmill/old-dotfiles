(defvar eww "$HOME/dotfiles/bin/eww -c $HOME/dotfiles/eww/isobar")

(deflisten workspaces "scripts/workspace-primary")

(deflisten minute1 "scripts/time")
(defvar minute2 "0")

(defvar hour1 "0")
(defvar hour2 "0")

(defvar month1 "0")
(defvar month2 "0")

(defvar day1 "0")
(defvar day2 "0") 

(defpoll current-brightness :interval "1s" "scripts/brightness-slider --value")
(defpoll current-volume :interval "1s" "amixer -D pulse sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%'")
(defvar b_tray false)

; tray stuff
(defpoll wifi-icon :interval "20s" "scripts/wifi icon")
(defpoll bluetooth-icon :interval "20s" "scripts/bluetooth --icon")
(defvar  dnd-icon "dnd0")
(defvar weather-icon "")
(defpoll weather-temp :interval "15m" "scripts/weather")
;; ============================================================
;;                                                      Widgets
;; ============================================================

(defwidget cluster []
	(box :class "main-box" :orientation "v" :space-evenly false
		
		; upper tray
		(box :class "reveal-other-box" :orientation "v" :space-evenly false
				(revealer :reveal b_tray :duration "1000ms"
					(eventbox :onhoverlost "${eww} update b_tray=false" 
						(box :orientation "v" :space-evenly false
							(overlay
								(overlay 
									(overlay
										(image :image-width 78 :image-height 298 :path "images/top-wedge.svg")
										(image :class "tray-pyramid" :image-width 64 :path "images/triangle-m/p1.svg")
										(image :class "tray-pyramid" :image-width 64 :path "images/triangle-m/p2.svg")
										(image :class "tray-pyramid" :image-width 64 :path "images/triangle-m/p3.svg")
										(image :class "tray-pyramid" :image-width 64 :path "images/triangle-m/p4.svg")
										(image :class "tray-pyramid" :image-width 64 :path "images/triangle-m/p5.svg"))
									(box :orientation "v" :space-evenly true :style "padding-top: 25px; padding-bottom: 55px;"
										(image  :style "margin-left: 20px;" :image-width 30 :path "images/icons/${wifi-icon}.svg")
										(image  :style "margin-left: -23px;" :image-width 30 :path "images/icons/${bluetooth-icon}.svg")
										(image  :style "margin-left: 20px;" :image-width 25 :path "images/icons/${dnd-icon}.svg")
										(label :class "weather-icon" :style "margin-left: -23px;" :text "${weather-icon}")
										(label :class "weather-temp" :style "margin-left: 20px" :text "${weather-temp}")))
									(box :orientation "v" :space-evenly true :style "padding-top: 17px; padding-bottom: 55px;"
										(button :onclick "scripts/popup wifi" "")
										(button :onclick "scripts/popup bluetooth" "")
										(button :onclick "scripts/dnd" "")
										; buttons over weather triangles.. does nothing.. here for spacing --> box = space evenly
										(button :onclick "" "")
										(button :onclick "" "")))
							(image :style "margin-top: -84px;" :image-width 64 :path "images/accent/bwa3.svg")))))							
			

		; main cluster
		(box :orientation "v" :height :554 :valign "start"
			(overlay
				(image :image-width 78 :path "images/bg.svg")
				(box :class "content" :orientation "v" :space-evenly false :spacing -26
					(top-accents)
					(top-date)
					(bspwm-workspaces)
					(bottom-time)
					(overlay
					(bottom-accents)
					(eventbox :onhover "${eww} update b_tray=${b_tray ? false : true}"))
				)
			)

			; lower tray
			(box :class "reveal-slider-box" :orientation "v" :space-evenly false
				(revealer :reveal b_tray :duration "1000ms"
					(eventbox :onhoverlost "${eww} update b_tray=false" 
						(overlay
							(image :image-width 78 :path "images/bottom-wedge.svg")
							(box :class "slider-box" :valign "start" :orientation "v" :space-evenly false
								(overlay
									(image :image-width 64 :path "images/accent/bwa1.svg")
									(image :image-width 64 :path "images/accent/bwa2.svg"))
								(box :orientation "h" :spacing -10
									(box :orientation "v" :space-evenly false
									(scale	:class "volbar"
											:valign "start"
											:value current-volume
											:orientation "v"
											:flipped true
											:width 20
											:height 200
											:max 101
											:min 0
											:onchange "amixer -D pulse sset Master {}%" )
									(label :class "volume-label" :text ""))
									(box :orientation "v" :style "margin-top: -20px" :space-evenly false
										(scale	:class "bribar"
												:valign "start"
												:value current-brightness
												:orientation "v"
												:flipped true
												:width 20
												:height 220
												:max 101
												:min 5
												:onchange "brightnessctl set {}%" )
										(label :class "brightness-label" :text "")))))))))))

(defwidget top-accents []
	(overlay
		(image :image-width 64 :path "images/accent/ta1.svg")
		(image :image-width 64 :path "images/accent/ta2.svg"))
)

(defwidget bottom-accents []
	(overlay
		(image :image-width 64 :path "images/accent/a1.svg")
		(image :image-width 64 :path "images/accent/a2.svg")
		(image :image-width 64 :path "images/accent/a3.svg"))
)

(defwidget top-date []
	(overlay
		(image :image-width 64 :path "images/top/month/${month1}-t1.svg")
		(image :image-width 64 :path "images/top/month/${month2}-t2.svg")
		(image :image-width 64 :path "images/top/day/${day1}-t3.svg")
		(image :image-width 64 :path "images/top/day/${day2}-t4.svg"))
)

(defwidget bottom-date []
	(overlay
		(image :image-width 64 :path "images/bottom/month/${month1}-b1.svg")
		(image :image-width 64 :path "images/bottom/month/${month2}-b2.svg")
		(image :image-width 64 :path "images/bottom/day/${day1}-b3.svg")
		(image :image-width 64 :path "images/bottom/day/${day2}-b4.svg"))
)

(defwidget top-time []
	(overlay
		(image :image-width 64 :path "images/top/hour/${hour1}-t1.svg")
		(image :image-width 64 :path "images/top/hour/${hour2}-t2.svg")
		(image :image-width 64 :path "images/top/minute/${minute1}-t3.svg")
		(image :image-width 64 :path "images/top/minute/${minute2}-t4.svg"))
)

(defwidget bottom-time []
	(overlay
		(image :image-width 64 :path "images/bottom/hour/${hour1}-b1.svg")
		(image :image-width 64 :path "images/bottom/hour/${hour2}-b2.svg")
		(image :image-width 64 :path "images/bottom/minute/${minute1}-b3.svg")
		(image :image-width 64 :path "images/bottom/minute/${minute2}-b4.svg"))
)

(defwidget bspwm-workspaces []
	(literal :content workspaces)
)

;; ============================================================
;;                                                      Windows
;; ============================================================

(defwindow bar
	:geometry (geometry :x "5"
						:y "0"
						:height "50"
						:width "78px")
	:monitor 0
	:reserve (struts	:distance "78px"
						:side "left")
	:wm-ignore false
(cluster))